# Yabai - Windows -------------------------------------------------------------

# Focus window

alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east

# Swap window

shift + alt - h : yabai -m window --swap west
shift + alt - j : yabai -m window --swap south
shift + alt - k : yabai -m window --swap north
shift + alt - l : yabai -m window --swap east

# Toggle window zoom

lalt - d : yabai -m window --toggle zoom-parent

lalt - f : yabai -m window --toggle zoom-fullscreen

lalt - g : yabai -m window --toggle native-fullscreen

lalt - t : yabai -m window --toggle float; yabai -m window --grid 4:4:1:1:2:2

# Yabai - Spaces --------------------------------------------------------------

# Focus space

cmd + alt - 1 : yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[0].index')
cmd + alt - 2 : yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[1].index')
cmd + alt - 3 : yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[2].index')
cmd + alt - 4 : yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[3].index')
cmd + alt - 5 : yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[4].index')
cmd + alt - 6 : yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[5].index')
cmd + alt - 7 : yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[6].index')
cmd + alt - 8 : yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[7].index')
cmd + alt - 9 : yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[8].index')

# Balance space

shift + alt - 0 : yabai -m space --balance

# Rotate space

lalt - r : yabai -m space --rotate 90
shift + lalt - r : yabai -m space --rotate 270

# Yabai - Windows & Spaces ----------------------------------------------------

# Send window to space and focus

shift + cmd - 1 : yabai -m window --space $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[0].index'); yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[0].index')
shift + cmd - 2 : yabai -m window --space $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[1].index'); yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[1].index')
shift + cmd - 3 : yabai -m window --space $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[2].index'); yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[2].index')
shift + cmd - 4 : yabai -m window --space $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[3].index'); yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[3].index')
shift + cmd - 5 : yabai -m window --space $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[4].index'); yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[4].index')
shift + cmd - 6 : yabai -m window --space $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[5].index'); yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[5].index')
shift + cmd - 7 : yabai -m window --space $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[6].index'); yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[6].index')
shift + cmd - 8 : yabai -m window --space $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[7].index'); yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[7].index')
shift + cmd - 9 : yabai -m window --space $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[8].index'); yabai -m space --focus $(yabai -m query --spaces | jq -r 'map(select(."is-native-fullscreen" == false))[8].index')

# Yabai - Applications --------------------------------------------------------

# Open application

lalt - return : open -a /Applications/Kitty\ Terminal.app
cmd - 0x2B    : kitten quick-access-terminal -o background_opacity=0.95

shift + lalt - b : open -a /Applications/Google\ Chrome.app
shift + lalt - c : open -a ~/Applications/Chrome\ Apps.localized/Excalidraw.app/
shift + lalt - s : open -a /Applications/Slack.app

# Focus application window

# The sed command "s/,[\s\n]*]/]/g" fixes a JSON parsing issue by removing
# trailing commas that sometimes appear in yabai's JSON output. This ensures
# "jq" can properly parse the window information. 

lalt - b : yabai -m window --focus $(yabai -m query --windows | sed 's/,[\s\n]*]/]/g' | jq 'map(select(.app == "Google Chrome" and (.title | contains("React Native DevTools") | not))) | .[0].id')
lalt - c : yabai -m window --focus $(yabai -m query --windows | sed 's/,[\s\n]*]/]/g' | jq 'map(select(.app == "Excalidraw")) | .[0].id')
lalt - l : yabai -m window --focus $(yabai -m query --windows | sed 's/,[\s\n]*]/]/g' | jq 'map(select(.app == "Google Chrome" and (.title | contains("React Native DevTools")))) | .[0].id')
lalt - s : yabai -m window --focus $(yabai -m query --windows | sed 's/,[\s\n]*]/]/g' | jq 'map(select(.app == "Slack")) | .[0].id')

# Focus application space

lalt - backspace : yabai -m space --focus $(yabai -m query --windows | sed 's/,[\s\n]*]/]/g' | jq 'map(select(.app == "Simulator" or .app == "qemu-system-aarch64")) | .[0].space')

# Example: Focus window with app name containing "Something"
